<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                version="3.0">
<!-- Things to change for each campus -->
<!-- 
Use oshkosh font? 
	true: use the normal oshkosh font to flip the "return to" text (font needs to be installed on the computer that the slip prints from)
	false: use css to flip the text (doesn't work in all clients, like outlook)
-->
<xsl:variable name="use_oshkosh_font">true</xsl:variable>
<xsl:variable name="oclc_symbol">GZT</xsl:variable> <!-- used on minitex slip -->
<xsl:variable name="mail_return_address_header"> <!-- used in footer_mail - add billing code for our mailroom -->
    <!--<span>####</span><span style="float: right"><strong>LIBRARY MAIL</strong></span><br />-->
</xsl:variable>
<xsl:variable name="mail_return_address"> <!-- used in footer_mail -->
	UW-Whitewater - ILL<br />
	Andersen Library<br />
	750 West Main Street<br />
	Whitewater, WI 53190
</xsl:variable>
<xsl:variable name="debug_partner">false</xsl:variable> <!-- if true, will display what type of slip the template matched with -->
<!-- End - Things to change for each campus -->


	<xsl:variable name="counter" select="0"/>
	<xsl:include href="header.xsl" />
	<xsl:include href="senderReceiver.xsl" />
	<xsl:include href="mailReason.xsl" />
	<xsl:include href="footer.xsl" />
	<xsl:include href="style.xsl" />
	<xsl:include href="recordTitle.xsl" />

<xsl:variable name="partner_type">
	<xsl:choose>
		<xsl:when test="starts-with(/notification_data/partner_code, '01UWI')">UW</xsl:when>
		<xsl:when test="starts-with(/notification_data/partner_name, 'University of Wisconsin')">UW_POD</xsl:when>
		<xsl:when test="starts-with(/notification_data/incoming_request/additional_borrower_information, 'Univ') and contains(/notification_data/incoming_request/additional_borrower_information, 'Wisc')">UW_POD</xsl:when>
		<xsl:when test="starts-with(/notification_data/partner_code, '01SLCO')">SWITCH</xsl:when>
		<xsl:when test="starts-with(/notification_data/incoming_request/pod_id, '537922422830000041')">SWITCH</xsl:when>
		<xsl:when test="starts-with(/notification_data/partner_code, 'A-G:STWI')">WI_PUBLIC</xsl:when>
		<xsl:when test="contains(/notification_data/incoming_request/pod_id, '381639321420000041')">MINITEX</xsl:when>
		<xsl:when test="contains(notification_data/incoming_request/note, 'Personal Delivery')">PERSONAL_DELIVERY</xsl:when>
		<xsl:otherwise>MAIL</xsl:otherwise>
	</xsl:choose>
</xsl:variable>

<!-- ##### Shipping headers ##### -->
<xsl:template name="header_redbox">
	<xsl:param name="lib"/>
	<h3>@@supplied_to@@:</h3>
	<h1>
	    <xsl:call-template name="addLineBreaks">
	        <xsl:with-param name="text" select="$lib"/>
        </xsl:call-template>
    </h1>
</xsl:template>
<xsl:template name="header_mail">
	Route to ILL for shipping
	<h2>RAPID</h2>
</xsl:template>
<xsl:template name="header_minitex">
	<!-- Minitex Boxes -->
</xsl:template>

<!-- ##### Shipping footers ##### -->
<xsl:template name="footer_redbox">
	<!-- todo: add oshkosh font -->
	<xsl:choose>
		<xsl:when test="$use_oshkosh_font = 'true'">
			<div class="abs_foot">
				<p align="left" style="font-size:20px; font-weight: bold; font-family:oshkosh;">
					<xsl:call-template name="reverse">
						<xsl:with-param name="input">
							<xsl:call-template name="libLookup"><xsl:with-param name="input" select="notification_data/item/library_name"/></xsl:call-template>
						</xsl:with-param>
					</xsl:call-template></p>
					<xsl:if test="contains(notification_data/organization_unit/name, 'Madison')">
						<div style="font-size:25px; font-weight: bold; font-family:oshkosh;" align="left">nosidaM-WU</div><br/>
					</xsl:if>
				<p style="font-size:14px; font-family:oshkosh;" align="left">:oT nruteR</p>
			</div>
		</xsl:when>
		<xsl:otherwise>
			<div class="abs_foot" style="transform: rotate(180deg); -webkit-transform: rotate(180deg); margin: 0 1em; padding: 0 1em">
				<p style="font-size:14px;" align="left">Return to:</p>
				<p align="left" style="font-size:25px; font-weight: bold">
					<xsl:if test="contains(notification_data/organization_unit/name, 'Madison')">
						UW-Madison<br/>
					</xsl:if>
					<xsl:call-template name="libLookup">
						<xsl:with-param name="input" select="notification_data/item/library_name"/>
					</xsl:call-template>
				</p>
			</div>
		</xsl:otherwise>
	</xsl:choose>

</xsl:template>
<xsl:template name="footer_mail">
	<div class="foot" style="border:1px solid black; padding:10px">
		Return To:<br/>
			<xsl:value-of select="$oclc_symbol"/> / <xsl:value-of select="/notification_data/organization_unit/code"/><br/>
			<xsl:copy-of select="$mail_return_address"/>
	</div>
	<br />
    <div class="abs_foot" style="border: 1px solid black; padding: 10px; font-size: 9pt;">
		<!-- Return Address Section -->
		<div style="padding-bottom: 1em; border-bottom: 1px solid black;">
		    <xsl:copy-of select="$mail_return_address_header"/>
			<xsl:copy-of select="$mail_return_address"/>
		</div>

		<!-- Recipient Section -->
		<div style="padding: 10px 0.8em; font-size: 11pt;">
			TO:<br />
			<xsl:value-of select="notification_data/alternate_symbol"/><br />
			<strong><xsl:value-of select="notification_data/partner_name"/></strong><br />
			<xsl:for-each select="notification_data/partner_shipping_info_list/partner_shipping_info">
				<!-- Loop through address1-5, skipping blanks -->
                <xsl:for-each select="address1 | address2 | address3 | address4 | address5">
                    <xsl:if test="normalize-space(.)">
                        <xsl:value-of select="."/><br />
                    </xsl:if>
                </xsl:for-each>
				<xsl:if test="normalize-space(city)">
					<xsl:value-of select="city"/>,&#160;<xsl:value-of select="state_province"/>&#160;<xsl:value-of select="state"/>&#160;<xsl:value-of select="postal_code"/>
				</xsl:if>
				<xsl:value-of select="country_display"/>
			</xsl:for-each>
		</div>
	</div>
</xsl:template>
<xsl:template name="footer_minitex">
	<!-- Blank for now -->
</xsl:template>

		<!-- Based on slip created by SMU; modified by Linda Richter;
				Modifications include:
				* Added code to distinguish between institutions
				* Added templates to extract useful information from cluttered XML
				* Completely reformatted to match Minitex slips
				* Added in the Wisconsin Letter customizations so this can be used for both State Delivery Systems - KMS@Madison 20211227
		 -->
<xsl:template match="/">
<html>
	<head>
	<xsl:call-template name="generalStyle" />
	<style>
		.barcode { font-family:"Barcode 3 of 9", "3 of 9 Barcode", "Libre Barcode 39"; font-size: 18px; padding-left: 2em }
		.messageBody, .abs_foot, .foot {width: 45% }
		h1 {  }
		@media print {
		    html { height: 95%; }
		    body { height: 100%; }
			.abs_foot { position: fixed; bottom: 5mm; left: 0; }
		}
	</style>
</head>
<body>
	<xsl:attribute name="style">
		<xsl:call-template name="bodyStyleCss"/><!-- style.xsl -->
	</xsl:attribute>
<!-- Letter starts here -->
    <div class="messageArea">
        <div class="messageBody">
<xsl:choose>
<!-- Personal Delivery -->
	<xsl:when test="$partner_type = 'PERSONAL_DELIVERY'">
		<h3 style="text-align: left; weight: bold">@@supplied_to@@: </h3>
		<h1 style="text-align: left; weight: bold"><xsl:value-of select="notification_data/partner_name"/> - Personal Delivery</h1>
	</xsl:when>
	
<!--This is our original UW lookup code - Includes Madison now -->
    <xsl:when test="$partner_type = 'UW'">
		<xsl:call-template name="header_redbox">
            <xsl:with-param name="lib">
				<!-- Add "UW-Madison -" so it doesn't just say Memorial Library -->
				<xsl:if test="starts-with(notification_data/partner_code, '01UWI_MAD')">UW-Madison - <br/>||</xsl:if>
				<xsl:call-template name="libLookup">
					<xsl:with-param name="input">
					    <xsl:variable name="note" select="/notification_data/incoming_request/note"/> 
					    <xsl:variable name="pickup">
                          <xsl:call-template name="pickup">
                            <xsl:with-param name="note" select="$note"/>
                            <xsl:with-param name="borrowing-library"
                                            select="/notification_data/incoming_request/borrowing_library"/>
                          </xsl:call-template>
                        </xsl:variable>
                        <xsl:if test="$pickup != ''"><xsl:value-of select="$pickup" />||</xsl:if>
					</xsl:with-param>
				</xsl:call-template>
			</xsl:with-param>
        </xsl:call-template>
    </xsl:when>

<!-- Additional lookup to to catch UW's in pods. Could probably be merged into libLookup someday -->
	<xsl:when test="$partner_type = 'UW_POD'">
		<xsl:call-template name="header_redbox">
			<xsl:with-param name="lib">
			    <xsl:variable name="partner">
			        <xsl:choose>
			            <xsl:when test="/notification_data/partner_name = 'RAPID'">
			                <xsl:value-of select="/notification_data/incoming_request/borrowing_institution" />
			            </xsl:when>
			            <xsl:otherwise>
			                <xsl:value-of select="/notification_data/partner_name" />
			            </xsl:otherwise>
			        </xsl:choose>
			    </xsl:variable>
				<xsl:choose>
					<xsl:when test="contains($partner, 'Madison')">
                        UW-Madison -||<br/>
                        <xsl:variable name="note" select="/notification_data/incoming_request/note"/>
                        <xsl:variable name="pickup">
                          <xsl:call-template name="pickup">
                            <xsl:with-param name="note" select="$note"/>
                            <xsl:with-param name="borrowing-library"
                                            select="/notification_data/incoming_request/borrowing_library"/>
                          </xsl:call-template>
                        </xsl:variable>
                        <xsl:value-of select="$pickup" />
                    </xsl:when>
					<xsl:when test="contains($partner, 'Fox Cities Library')">UW-Fox Cities</xsl:when>
					<xsl:when test="contains($partner, 'Oshkosh')">UW-Oshkosh</xsl:when>
					<xsl:when test="contains($partner, 'Polk Library')">UW-Oshkosh</xsl:when>
					<xsl:when test="contains($partner, 'UW-Oshkosh Library')">UW-Oshkosh</xsl:when>
					<xsl:when test="contains($partner, 'Barron Library')">UW-Barron</xsl:when>
					<xsl:when test="contains($partner, 'McIntyre Library')">UW-Eau Claire</xsl:when>
					<xsl:when test="contains($partner, 'Sheboygan Library')">UW-Sheboygan</xsl:when>
					<xsl:when test="contains($partner, 'Green Bay Library')">UW-Green Bay</xsl:when>
					<xsl:when test="contains($partner, 'Green Bay')">UW-Green Bay</xsl:when>
					<xsl:when test="contains($partner, 'River Falls')">UW-River Falls</xsl:when>
					<xsl:when test="contains($partner, 'Parkside')">UW-Parkside</xsl:when>
					<xsl:when test="contains($partner, 'Rock County Library')">UW-Rock County</xsl:when>
					<xsl:when test="contains($partner, 'Whitewater Library')">UW-Whitewater</xsl:when>
					<xsl:when test="contains($partner, 'Wausau Library')">UW-Wausau</xsl:when>
					<xsl:when test="contains($partner, 'Marshfield Library')">UW-Marshfield</xsl:when>
					<xsl:when test="contains($partner, 'Stevens Point')">UW-Stevens Point</xsl:when>
					<xsl:otherwise>  
						<xsl:if test="notification_data/incoming_request/borrowing_institution">
							<xsl:value-of select="notification_data/incoming_request/borrowing_institution"/>
						</xsl:if>
						<xsl:if test="notification_data/partner_name">
							||<xsl:value-of select="notification_data/partner_name"/>
						</xsl:if>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:with-param>
		</xsl:call-template>
   </xsl:when>
   
<!--Setup for Switch Redbox delivery for WI-->
	<xsl:when test="$partner_type = 'SWITCH'">
		<xsl:call-template name="header_redbox">
            <xsl:with-param name="lib">
				SWITCH -<br />||<xsl:value-of select="normalize-space(substring-after(notification_data/partner_name, ('-')))"/>
            </xsl:with-param>
        </xsl:call-template>
	</xsl:when>

<!--Setup for Public Libraries-->
	<xsl:when test="$partner_type = 'WI_PUBLIC'">
		Route via Red Box<br />
		Return this slip with the item.
		<h3 style="text-align: left; weight: bold">@@supplied_to@@: </h3>
	 		<h1 style="text-align: left; weight: bold">
            <xsl:for-each select="notification_data/partner_shipping_info_list/partner_shipping_info">
			<xsl:value-of select="address2"/>
			<h3>Library:<xsl:value-of select="address1"/></h3>
            <h4><xsl:value-of select="address3"/></h4>
            <h4><xsl:value-of select="city"/>&#160;<xsl:value-of select="state_province"/>&#160;<xsl:value-of select="state"/>&#160;<xsl:value-of select="postal_code"/></h4>
			</xsl:for-each></h1>
		    <br />
	</xsl:when>
<!--MN top part of letter -->
	<xsl:when test="$partner_type = 'MINITEX'">
		Route via Minitex Courier<br />
		Return this slip with the item.
		<!-- Borrower cell -->
		<div style="border:1px solid black; padding:10px;">
			<b>@@supplied_to@@:</b><br />
			<!-- Borrower code -->
			<span style="font-size:64px; font-weight:700; padding-bottom: 20px;" class="visible">
				<xsl:choose>
					<xsl:when test="contains(notification_data/partner_name, 'Ireland Library')">SSE</xsl:when>
					<xsl:when test="contains(notification_data/partner_name, 'Keffer Library')">MNTMP</xsl:when>
					<xsl:when test="contains(notification_data/partner_name, 'Thomas Law Library')">TL#</xsl:when>
					<xsl:when test="contains(notification_data/partner_name, 'Shaughnessy-Frey Library')">MNT</xsl:when>
					<xsl:when test="contains(notification_data/partner_name, 'Bethel')">MNK</xsl:when>
					<xsl:when test="contains(notification_data/partner_name, 'Hamline')">MHA</xsl:when>
					<xsl:when test="contains(notification_data/partner_name, 'Bridge')">MNO</xsl:when>
					<xsl:when test="contains(notification_data/partner_name, 'MORRIS Briggs')">MNX</xsl:when>
					<xsl:when test="contains(notification_data/partner_name, 'DULUTH Martin')">MND</xsl:when>
					<xsl:when test="contains(notification_data/partner_name, 'CROOKSTON Moe')">MCR</xsl:when>
					<xsl:when test="contains(notification_data/partner_name, 'University of Minnesota')">MNU</xsl:when>
					<xsl:when test="contains(notification_data/partner_name, 'Minitex')">MII</xsl:when>
					<xsl:otherwise>
					    <xsl:value-of select="if (matches(notification_data/partner_name, '\(.*\)')) then replace(notification_data/partner_name, '^.*?\((.*?)\).*$', '$1') else ''"/>
					</xsl:otherwise>
				</xsl:choose>
			</span><!-- end borrower code -->
			<div class="barcode" style="padding-left: 0; text-align: center; font-size: 16px">*<xsl:value-of select="notification_data/group_qualifier"/>*</div>
			<b>@@borrower_reference@@: </b><xsl:value-of select="notification_data/group_qualifier"/><br />
			<b>Borrower: </b><xsl:value-of select="notification_data/partner_name"/><br />
			<b>Request Date: </b><xsl:value-of select="notification_data/incoming_request/create_date"/><br />
			<b>Due Date: </b>_______________________________________<br />
		</div>
		<!-- Lender cell -->
		<div style="border:1px solid black; padding:10px;">
			<b>Return to:</b><br />

			<!-- Lender code -->
			<span style="font-size:64px; font-weight:700; padding-bottom: 20px;" class="visible">
			<xsl:value-of select="$oclc_symbol"/></span><br />
			<b>Lender: </b><xsl:value-of select="notification_data/item/library_name"/>
			<!-- end lender code -->
			<br /><br /><br />
			<b>@@external_identifier@@: </b><xsl:value-of select="notification_data/group_qualifier"/><br />
			<b>Printed Date: </b><xsl:value-of select="notification_data/incoming_request/print_slip_date"/><br />
			<b>@@date_needed_by@@: </b><xsl:value-of select="notification_data/incoming_request/needed_by"/><br />
		</div>
		<!-- end lender cell -->
</xsl:when>
<xsl:otherwise>
	<xsl:call-template name="header_mail"/>
</xsl:otherwise>
</xsl:choose>

	<!-- START Requested item  -->
	<xsl:call-template name="request_info"/>
	</div>
</div>

<xsl:choose>
	<!--WI Footer-->
    <xsl:when test="$partner_type = 'UW' or  
                    $partner_type = 'UW_POD' or
                    $partner_type = 'SWITCH' or
                    $partner_type = 'WI_PUBLIC'">
        <xsl:call-template name="footer_redbox"/>
    </xsl:when>
	<!-- Minitext Footer -->
	<xsl:when test="$partner_type = 'MINITEX'">
		<xsl:call-template name="footer_minitex"/>
    </xsl:when>
	<!--Mail Footer-->
	<xsl:otherwise>
		<xsl:call-template name="footer_mail"/>			
	</xsl:otherwise>
</xsl:choose>

<!-- ### DEBUG partner ### -->
<xsl:if test="$debug_partner = 'true'">
	<h1 style="color: red"><xsl:value-of select="$partner_type"/></h1>
</xsl:if>
</body>
</html>
</xsl:template>
<!-- Template section -->

<xsl:template name="GetLastSegment">
	<xsl:param name="value" />
	<xsl:param name="separator" select="'.'" />
	<xsl:choose>
		<xsl:when test="contains($value, $separator)">
			<xsl:call-template name="GetLastSegment">
				<xsl:with-param name="value" select="substring-after($value, $separator)" />
				<xsl:with-param name="separator" select="$separator" />
			</xsl:call-template>
		</xsl:when>
		<xsl:otherwise>
			<xsl:value-of select="$value" />
		</xsl:otherwise>
	</xsl:choose>
</xsl:template>

<xsl:template name="reverse">
	<xsl:param name="input"/>
	<xsl:variable name="len" select="string-length($input)"/>
	<xsl:choose>
		<!-- Strings of length less than 2 are trivial to reverse -->
		<xsl:when test="$len &lt; 2">
			<xsl:value-of select="$input"/>
		</xsl:when>
		<!-- Strings of length 2 are also trivial to reverse -->
		<xsl:when test="$len = 2">
			<xsl:value-of select="substring($input,2,1)"/>
			<xsl:value-of select="substring($input,1,1)"/>
		</xsl:when>
		<xsl:otherwise>
			<!-- Swap the recursive application of this template to
		   the first half and second half of input -->
			<xsl:variable name="mid" select="floor($len div 2)"/>
			<xsl:call-template name="reverse">
				<xsl:with-param name="input"
					 select="substring($input,$mid+1,$mid+1)"/>
			</xsl:call-template>
			<xsl:call-template name="reverse">
				<xsl:with-param name="input"
					 select="substring($input,1,$mid)"/>
			</xsl:call-template>
		</xsl:otherwise>
	</xsl:choose>
</xsl:template>
	
<xsl:template name="request_info">
    <!-- START Requested item -->
	<p align="left" style="font-size:18px;">
		<xsl:if test="notification_data/group_qualifier">
			<b>@@group_qualifier@@: </b>
			<xsl:value-of select="notification_data/group_qualifier"/><br />
			<span class="barcode">*<xsl:value-of select="notification_data/group_qualifier"/>*</span>
		</xsl:if>
	</p>
	<p align="left" style="font-size:18px; font-weight:bold;">Due date:_____________</p>
	<p align="left" style="font-size:20px; font-weight:bold;">Please do not remove this slip.</p>

	<xsl:if test="notification_data/incoming_request/multi_barcode_visible = 'true'">
		<br />
		<div style="font-size: larger; background: #CCC">
			<b>MULTIPLE BARCODES:</b><br />
			This request has <b><xsl:value-of select="count(/notification_data/multi_barcodes/string)"/></b> items
		</div>
	</xsl:if>
	<br />
	<b>@@title@@: </b><xsl:value-of select="notification_data/metadata/title"/><br />
	<b>@@author@@: </b><xsl:value-of select="notification_data/metadata/author"/><br />
	<xsl:if test="notification_data//metadata/issn != ''">
		<b>@@issn@@: </b><xsl:value-of select="notification_data/metadata/issn"/><br />
	</xsl:if>
	<!--
	<xsl:if test="notification_data/metadata/isbn != ''">
		<b>@@isbn@@: </b><xsl:value-of select="notification_data/items/physical_item_display_for_printing/isbn"/><br />
	</xsl:if>
	<b>@@publisher@@: </b><xsl:value-of select="notification_data/metadata/publisher"/>, &#160;<xsl:value-of select="notification_data/metadata/place_of_publication"/><br />
	<b>@@publication_date@@: </b><xsl:value-of select="notification_data/metadata/publication_date"/><br />
	-->
	<b>@@call_number@@: </b><xsl:value-of select="notification_data/item/call_number"/><br />
	<xsl:if test="shelving_location/string">
		<b>@@shelving_location_for_item@@: </b>
		<xsl:for-each select="shelving_location/string">
			<xsl:value-of select="."/>&#160;
		</xsl:for-each>
	</xsl:if>
	<xsl:if test="notification_data/item">
		<xsl:choose>
			<xsl:when test="notification_data/incoming_request/multi_barcode_visible = 'true'">
				<div style="font-size: larger; font-weight: bold; background: #CCC">
					This request has <xsl:value-of select="count(/notification_data/multi_barcodes/string)"/> items.
				</div>
				<b>Item Barcodes: </b><br />
				<xsl:for-each select="/notification_data/multi_barcodes/string">
					<xsl:value-of select="."/><br />
				</xsl:for-each>
			</xsl:when>
			<xsl:otherwise>
				<b>@@item_barcode@@: </b>
				<xsl:value-of select="notification_data/item/barcode"/><br />
			</xsl:otherwise>
		</xsl:choose>
	</xsl:if>
	<!-- Properties that may or may not be present -->
	<xsl:if test="notification_data/metadata/edition != ''">
		<b>@@edition@@: </b>
		<xsl:value-of select="notification_data/items/physical_item_display_for_printing/edition"/><br />
	</xsl:if>
	<xsl:if test="notification_data/metadata/journal_title != ''">
		<b>@@journal_title@@: </b>
		<xsl:value-of select="notification_data/metadata/journal_title"/><br />
	</xsl:if>
	<xsl:if test="notification_data/metadata/volume != ''">
		<b>@@volume@@: </b>
		<xsl:value-of select="notification_data/metadata/volume"/><br />
	</xsl:if>
	<xsl:if test="notification_data/metadata/issue != ''">
		<b>@@issue@@: </b>
		<xsl:value-of select="notification_data/metadata/issue"/><br />
	</xsl:if>

	<xsl:if test="notification_data/incoming_request/format">
		<b>@@format@@: </b>
		<xsl:value-of select="notification_data/incoming_request/format"/> -
		<xsl:value-of select="notification_data/metadata/material_type"/>
		<br />
	</xsl:if>

	<b>@@request_note@@: </b>
	<xsl:value-of select="notification_data/metadata/note"/><br/>		
	<xsl:choose>
	  <xsl:when test="contains(notification_data/incoming_request/note, '||')">
		<xsl:value-of select="substring-before(notification_data/incoming_request/note, '||')"/>
	  </xsl:when>
	  <xsl:otherwise>
		<xsl:value-of select="notification_data/incoming_request/note"/>
	  </xsl:otherwise>
	</xsl:choose>
	<!-- printed timestamp - useful for finding correct letter for troubleshooting -->
	<span style="font-size: smaller; color: #999"><xsl:value-of select="/notification_data/general_data/current_date"/> - <xsl:value-of select="/notification_data/general_data/current_time"/></span>
</xsl:template>

<xsl:template name="addLineBreaks">
    <xsl:param name="text"/>

    <xsl:choose>
        <xsl:when test="contains($text, '||')">
            <!-- Extract the part before || -->
            <xsl:value-of select="substring-before($text, '||')"/>
            <br/>
            <!-- Process the remaining text -->
            <xsl:call-template name="addLineBreaks">
                <xsl:with-param name="text" select="substring-after($text, '||')"/>
            </xsl:call-template>
        </xsl:when>
        <xsl:otherwise>
            <!-- Output the last remaining piece -->
            <xsl:value-of select="$text"/>
        </xsl:otherwise>
    </xsl:choose>
</xsl:template>

<xsl:template name="pickup">
  <xsl:param name="note"/>
  <xsl:param name="borrowing-library"/>

  <xsl:variable name="from-note">
    <xsl:if test="matches($note, 'Pickup at:\s*([^|]*)(\s*\|\|)?', 'i')">
      <xsl:value-of select="
        normalize-space(
          replace($note,
                  '.*Pickup at:\s*([^|]*)(\s*\|\|)?.*',
                  '$1',
                  'i')
        )"/>
    </xsl:if>
  </xsl:variable>

  <xsl:choose>
    <xsl:when test="normalize-space($from-note) != ''">
      <xsl:value-of select="$from-note"/>
    </xsl:when>
    <xsl:when test="normalize-space($borrowing-library) != ''">
      <xsl:value-of select="normalize-space($borrowing-library)"/>
    </xsl:when>
    <xsl:otherwise>____________</xsl:otherwise>
  </xsl:choose>
</xsl:template>
	
</xsl:stylesheet>
